 http://arprogramming.blogspot.com/2020/04/photo-filter-library-with-source-code-2.html
 
 
 implementation 'com.etebarian:meow-bottom-navigation-java:1.2.0'
 
 gradle proporty -  
 
 android.useAndroidX=true
# Automatically convert third-party libraries to use AndroidX
android.enableJetifier=true

Main activity
public class MainActivity extends AppCompatActivity {
   MeowBottomNavigation meowBottomNavigation;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
      meowBottomNavigation = findViewById(R.id.nav);
      meowBottomNavigation.add(new MeowBottomNavigation.Model(1,R.drawable.ic_home));
      meowBottomNavigation.add(new MeowBottomNavigation.Model(2,R.drawable.call));
      meowBottomNavigation.add(new MeowBottomNavigation.Model(3,R.drawable.search));
      meowBottomNavigation.add(new MeowBottomNavigation.Model(4,R.drawable.like));


      getSupportFragmentManager().beginTransaction().replace(R.id.fm,new HomeFragment()).commit();


meowBottomNavigation.setOnClickMenuListener(new MeowBottomNavigation.ClickListener() {
    @Override
    public void onClickItem(MeowBottomNavigation.Model item) {


        switch (item.getId()){
            case 1 :
            {

                Toast.makeText(MainActivity.this, "HOME", Toast.LENGTH_SHORT).show();
                break;
            }
            case 2 :
            {
                Toast.makeText(MainActivity.this, "CALL", Toast.LENGTH_SHORT).show();
                break;
            }
            case 3 :
            {
                Toast.makeText(MainActivity.this, "SEARCH", Toast.LENGTH_SHORT).show();

                break;
            }
            case 4 :
            {
                Toast.makeText(MainActivity.this, "LIKE", Toast.LENGTH_SHORT).show();

                break;
            }
        }    }
});

        meowBottomNavigation.setOnShowListener(new MeowBottomNavigation.ShowListener() {
            @Override
            public void onShowItem(MeowBottomNavigation.Model item) {

                Fragment fragment = null;
                switch (item.getId()){
                    case 1 :
                    {
                        fragment = new HomeFragment();
                        break;
                    }
                    case 2 :
                    {
                        fragment = new CallFragment();
                        break;
                    }
                    case 3 :
                    {
                        fragment = new SerchFragment();
                        break;
                    }
                    case 4 :
                    {
                        fragment = new LikeFragment();
                        break;
                    }
                }
                getSupportFragmentManager().beginTransaction().replace(R.id.fm,fragment).commit();

            }
        });
    }




main xml in relative

 <FrameLayout
        android:id="@+id/fm"
        android:layout_width="match_parent"
        android:layout_alignParentBottom="true"
        android:layout_height="146dp"></FrameLayout>

    <com.etebarian.meowbottomnavigation.MeowBottomNavigation
        android:id="@+id/nav"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_alignParentBottom="true"
        android:background="@android:color/transparent"
        app:mbn_backgroundBottomColor="@color/teal_200"
        app:mbn_countBackgroundColor="@color/purple_500"
        app:mbn_countTextColor="@color/black"
        app:mbn_defaultIconColor="@color/black"
        app:mbn_rippleColor="@color/purple_200"
        app:mbn_selectedIconColor="@color/black"
        app:mbn_shadowColor="#5000">
    </com.etebarian.meowbottomnavigation.MeowBottomNavigation>
    
    
    call fragment ----
    do with same all other fragment and make xml files for them----
    
/**
 * A simple {@link Fragment} subclass.
 * Use the {@link CallFragment#newInstance} factory method to
 * create an instance of this fragment.
 */
public class CallFragment extends Fragment {

    // TODO: Rename parameter arguments, choose names that match
    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
    private static final String ARG_PARAM1 = "param1";
    private static final String ARG_PARAM2 = "param2";

    // TODO: Rename and change types of parameters
    private String mParam1;
    private String mParam2;

    public CallFragment() {
        // Required empty public constructor
    }

    /**
     * Use this factory method to create a new instance of
     * this fragment using the provided parameters.
     *
     * @param param1 Parameter 1.
     * @param param2 Parameter 2.
     * @return A new instance of fragment CallFragment.
     */
    // TODO: Rename and change types and number of parameters
    public static CallFragment newInstance(String param1, String param2) {
        CallFragment fragment = new CallFragment();
        Bundle args = new Bundle();
        args.putString(ARG_PARAM1, param1);
        args.putString(ARG_PARAM2, param2);
        fragment.setArguments(args);
        return fragment;
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        if (getArguments() != null) {
            mParam1 = getArguments().getString(ARG_PARAM1);
            mParam2 = getArguments().getString(ARG_PARAM2);
        }
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        return inflater.inflate(R.layout.fragment_call, container, false);
    }
}
    
    
    
    

