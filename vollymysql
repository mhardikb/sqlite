Main acity-----

 TextView text;
    Button b1,b2;
    HashMap map;

    TextInputEditText t1,t2 ,t3,t4;
    int n = 5;
    String uname = "hardik";
    String pw = "1234";
    ProgressDialog progressDialog;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        t1 =  findViewById(R.id.t1);
        t2 =  findViewById(R.id.t2);
        t3 =  findViewById(R.id.t3);
        t4 =  findViewById(R.id.t4);
        b1 = findViewById(R.id.b1);
        b2 = findViewById(R.id.b2);
        text = findViewById(R.id.text);
        progressDialog = new ProgressDialog(this);
        map = new HashMap();

        b1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String s1 = t1.getText().toString();
                String s2 = t2.getText().toString();
                String s3 = t3.getText().toString();
                String s4 = t4.getText().toString();

                String url = "https://hardik-cdmi.000webhostapp.com/logininsert.php";
                progressDialog.setMessage("data inserting");
                progressDialog.show();
                StringRequest stringRequest = new StringRequest(Request.Method.POST, url,
                        new Response.Listener<String>() {
                            @Override
                            public void onResponse(String response) {

                                progressDialog.dismiss();
                                if (response.equalsIgnoreCase("done")){
                                    Toast.makeText(MainActivity.this, "Done", Toast.LENGTH_SHORT).show();
                                }
                            }
                        }, new Response.ErrorListener() {
                    @Override
                    public void onErrorResponse(VolleyError error) {
                        progressDialog.dismiss();

                            Toast.makeText(MainActivity.this, "not Done", Toast.LENGTH_SHORT).show();
                    }
                }) {
                    @Override
                    protected Map<String, String> getParams() throws AuthFailureError {
                        map.put("name",s1);
                        map.put("email",s2);
                        map.put("password",s3);
                        map.put("city",s4);
                        Log.d("name","nnnnnnnnnnn= "+s1);
                        Log.d("name","nnnnnnnnnnn= "+s2);

                        return map;
                    }
                };
                RequestQueue requestQueue = Volley.newRequestQueue(MainActivity.this);
                requestQueue.add(stringRequest);
            }
        });

        b2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(MainActivity.this,MainActivity2.class);
                startActivity(intent);
            }
        });
        
        datum----
        
        
public class Datum {

    @SerializedName("id")
    @Expose
    private String id;
    @SerializedName("email")
    @Expose
    private String email;
    @SerializedName("password")
    @Expose
    private String password;

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

}


 Activity 2=----
 
 
 
  RecyclerView recyclerView;
   LinearLayoutManager manager;
    String url = "https://hardik-cdmi.000webhostapp.com/select.php";
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main2);
        recyclerView = findViewById(R.id.rcl);
        recyclerView.setLayoutManager(new LinearLayoutManager(this));


        StringRequest stringRequest = new StringRequest(url, new Response.Listener<String>() {
            @Override
            public void onResponse(String response) {
                GsonBuilder gsonBuilder = new GsonBuilder();
                Gson gson = gsonBuilder.create();
                Datum data[]= gson.fromJson(response,Datum[].class);
                Myadapter myadapter = new Myadapter(MainActivity2.this,data);
                recyclerView.setAdapter(myadapter);
            }
        }, new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {

            }
        });
        RequestQueue requestQueue = Volley.newRequestQueue(this);
        requestQueue.add(stringRequest);
    }
    
    
    
    adapter ---
    
    
    public class Myadapter extends RecyclerView.Adapter<Myadapter.myclass> {

    MainActivity2 mainActivity2;
    Datum[] data;
    public Myadapter(MainActivity2 mainActivity2, Datum[] data) {
        this.data = data;
        this.mainActivity2 = mainActivity2;
    }
    class myclass extends RecyclerView.ViewHolder {
            TextView t1,t2,t3;
            Button b1,b2;


        public myclass(@NonNull View itemView) {
            super(itemView);
            t1 = itemView.findViewById(R.id.t1);
            t2 = itemView.findViewById(R.id.t2);
            t3 = itemView.findViewById(R.id.t3);
            b1 = itemView.findViewById(R.id.b1);


        }
    }

    @NonNull
    @Override
    public myclass onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {

        View view= LayoutInflater.from(mainActivity2).inflate(R.layout.mylayout,parent,false);


        return new myclass(view);
    }

    @Override
    public void onBindViewHolder(@NonNull myclass holder, int position) {

        Datum datum = data[position];
        holder.t1.setText("id="+datum.getId());
        holder.t2.setText("Email="+datum.getEmail());
        holder.t3.setText("Password="+datum.getPassword());
        holder.b1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(mainActivity2,MainActivity3.class);
                intent.putExtra("email",data[position].getEmail());
                intent.putExtra("password",data[position].getPassword());
                mainActivity2.startActivity(intent);
            }
        });


    }

    @Override
    public int getItemCount() {
        return data.length;
    }


}



activity 3----

 String s1,s2;
   EditText e1,e2;
   Button update,delete;
   HashMap map;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main3);

        e1 = findViewById(R.id.e1);
        e2 = findViewById(R.id.e2);
        update = findViewById(R.id.b1);
        delete = findViewById(R.id.b2);
        s1 = getIntent().getStringExtra("email");
        s2 = getIntent().getStringExtra("password");
        map= new HashMap();
       e1.setText(""+s1);
       e2.setText(""+s2);




       update.setOnClickListener(new View.OnClickListener() {
           @Override
           public void onClick(View v) {
        String ss1 = e1.getText().toString();
        String ss2 = e2.getText().toString();
        Log.d("fefrfrfrffffrfr","rrrrrrrrrrrrrrrr"+ss2);

               StringRequest stringRequest = new StringRequest(Request.Method.POST, "https://hardik-cdmi.000webhostapp.com/update.php",
                       new Response.Listener<String>() {
                           @Override
                           public void onResponse(String response) {
                               if (response.equalsIgnoreCase("updated")){
                                   Toast.makeText(MainActivity3.this, "Done", Toast.LENGTH_SHORT).show();
                               }

                           }
                       }, new Response.ErrorListener() {
                   @Override
                   public void onErrorResponse(VolleyError error) {
                       Toast.makeText(MainActivity3.this, "not Done", Toast.LENGTH_SHORT).show();
                       Log.d("hhhihihihihih","faillllll"+error);

                   }
               })
               {
                   @Override
                   protected Map<String, String> getParams() throws AuthFailureError {

                      map.put("email",ss1);
                      map.put("password",ss2);



                       return map;
                   }
               }  ;
               RequestQueue requestQueue = Volley.newRequestQueue(MainActivity3.this);
               requestQueue.add(stringRequest);





           }
       });


        delete.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                String sss1 = e1.getText().toString();

                StringRequest stringRequest = new StringRequest(Request.Method.POST, "https://hardik-cdmi.000webhostapp.com/delete.php",
                        new Response.Listener<String>() {
                            @Override
                            public void onResponse(String response) {
                                if (response.equalsIgnoreCase("done")){
                                    Toast.makeText(MainActivity3.this, "Done", Toast.LENGTH_SHORT).show();

                                }

                            }
                        }, new Response.ErrorListener() {
                    @Override
                    public void onErrorResponse(VolleyError error) {
                        Toast.makeText(MainActivity3.this, "not Done", Toast.LENGTH_SHORT).show();
                        Log.d("hhhihihihihih","faillllll"+error);

                    }
                })
                {
                    @Override
                    protected Map<String, String> getParams() throws AuthFailureError {

                        map.put("email",sss1);
                     Log.d("aaaaaaaaaaa---------","sgsgssgsgsgsgs"+sss1);



                        return map;
                    }
                }  ;
                RequestQueue requestQueue = Volley.newRequestQueue(MainActivity3.this);
                requestQueue.add(stringRequest);





            }
        });



