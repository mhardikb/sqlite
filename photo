 manifest add
 
78	    public static void showImagePickerOptions(Context context, PickerOptionListener listener) { 
79	        Builder builder = new Builder(context); 
80	        builder.setTitle(context.getString(R.string.lbl_set_profile_photo)); 
81	        builder.setItems(new String[]{context.getString(R.string.lbl_take_camera_picture), context.getString(R.string.lbl_choose_from_gallery)}, new -$$Lambda$ImagePickerActivity$pq5EXrO1xNaazLFlI7-fvj08o54(listener)); 
82	        builder.create().show(); 
83	    } 
84	 
85	    static /* synthetic */ void lambda$showImagePickerOptions$0(PickerOptionListener listener, DialogInterface dialog, int which) { 
86	        if (which == 0) { 
87	            listener.onTakeCameraSelected(); 
88	        } else if (which == 1) { 
89	            listener.onChooseGallerySelected(); 
90	        } 
91	    } 

 	<provider
            android:name="androidx.core.content.FileProvider"
            android:authorities="${applicationId}.provider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/provider_path">
            </meta-data>
        </provider> 

# xml file..
	
	<?xml version="1.0" encoding="utf-8"?>
	<paths xmlns:android="http://schemas.android.com/apk/res/android">

    		<external-path
        		name="external_files"
        		path=".">
    	</external-path>
	</paths>



save in amage view 


                    // loading profile image from local cache
            //        loadProfile(uri.toString());
                    Intent intent = new Intent(MainActivity.this,nextactivity.class);
                    intent.putExtra("image",uri.toString());
                    startActivity(intent);
 
 in next activity 
               
        String uri = getIntent().getStringExtra("image");
        image.setImageURI(Uri.parse(uri));

 
 
 for dowenload ---
  
                drawable = (BitmapDrawable)image.getDrawable();
                bitmap = drawable.getBitmap();
                FileOutputStream outputStream = null;
                File sdcard = Environment.getExternalStorageDirectory();
                File directory = new File(sdcard.getAbsolutePath() + "/Yourname");
                directory.mkdir();

                String filename = String.format("%d.jpg",System.currentTimeMillis());
                File outfile = new File(directory,filename);

                try {
                    outputStream = new FileOutputStream(outfile);
                    bitmap.compress(Bitmap.CompressFormat.JPEG,100,outputStream);
                    outputStream.flush();
                    outputStream.close();

                    Intent intent = new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);
                    intent.setData(Uri.fromFile(outfile));
                    sendBroadcast(intent);


                } catch (FileNotFoundException e) {
                    e.printStackTrace();
                } catch (IOException e) {
                    e.printStackTrace();
                }


            }
            
            for share ---
            
                drawable = (BitmapDrawable) image.getDrawable();
                bitmap = drawable.getBitmap();

                try
                {
                    File file = new File(getApplicationContext().getExternalCacheDir(),File.separator+"a.jpg");
                    FileOutputStream fout =  new FileOutputStream(file);
                    bitmap.compress(Bitmap.CompressFormat.JPEG,100,fout);
                    fout.flush();
                    fout.close();
                    file.setReadable(true,false);

                    final Intent intent=new Intent(Intent.ACTION_SEND);
                    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                    Uri photoURI = FileProvider.getUriForFile(getApplicationContext(),BuildConfig.APPLICATION_ID+".provider",file);
                    intent.putExtra(Intent.EXTRA_STREAM,photoURI);
                    intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
                    intent.setType("image/png");
                    startActivity(Intent.createChooser(intent,"Share iamge"));
                }
                catch (Exception e)
                {
                    e.printStackTrace();
                }


for filters -----    https://protocoderspoint.com/photo-filter-github-android-library/
first---
allprojects 
{
  repositories 
  {
    maven { url 'https://jitpack.io' } //add this line
  }
}

second---

  implementation 'com.github.hgayan7:FilterLibrary:0.1.0'
  
  
  last java ----
  
  
     PhotoFilter photoFilter;
                 drawable = (BitmapDrawable) image.getDrawable();
                 bitmap = drawable.getBitmap();
                photoFilter = new PhotoFilter();
// using filter 'one'
                image.setImageBitmap(photoFilter.one(getApplicationContext(),bitmap));
// using filter 'sixteen'

